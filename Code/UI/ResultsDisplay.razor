@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
	@if (GameManager.Current?.State == GameState.Pause || GameManager.Current?.State == GameState.Playing)
	{
		<div class="results-display">
			<div class="winners">
				<div class="header">Winners</div>
				<div class="players">
					@foreach (var player in Scene.GetAllComponents<Player>()
										.Where(p => LastResult.ContainsKey(p) && LastResult[p]))
					{
						<div class="player">@($"{player.Points} - {player.Network.Owner.DisplayName}")</div>
					}
				</div>
			</div>
			<div class="losers">
				<div class="header">Losers</div>
				<div class="players">
					@foreach (var player in Scene.GetAllComponents<Player>()
										.Where(p => LastResult.ContainsKey(p) && !LastResult[p]))
					{
						<div class="player">@($"{player.Points} - {player.Network.Owner.DisplayName}")</div>
					}
				</div>
			</div>
		</div>
	}
</root>

@code
{
	private static Dictionary<Player, bool> LastResult { get; set; } = new();

	protected override int BuildHash() => HashCode.Combine(GameManager.Current?.State, LastResult);

	[Rpc.Broadcast]
	public static void UpdateResults(Dictionary<Player, bool> results)
	{
		LastResult = results;
	}
}
